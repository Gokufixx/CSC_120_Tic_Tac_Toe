# -*- coding: utf-8 -*-
"""board

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t23WE-mXGkXU0SPpnqW_7OlqjSIK56Fc
"""



Row_1 = ["-" , "-" , "-"]
Row_2 = ["-" , "-" , "-"]
Row_3 = ["-" , "-" , "-"]
turnAlternator = 0
turnCounter = 0
gameEnd = 0
def print_board():
  print(Row_1)
  print(Row_2)
  print(Row_3)
def playerOneTurn():
    token = "X"
    turnAlternator = 0
    while turnAlternator == 0:
      placer = int(input())
      if placer > 10 and placer < 15:
        if placer == 11 and Row_1[0] == "-":
          Row_1[0] = token
          turnAlternator = 11
        elif placer == 12 and Row_1[1] == "-":
          Row_1[1] = token
          turnAlternator = 11
        elif placer == 13 and Row_1[2] == "-":
          Row_1[2] = token
          turnAlternator = 11
        else:
          print("Invalid Space, Try Another")
      elif placer > 20 and placer < 25:
        if placer == 21 and Row_2[0] == "-":
          Row_2[0] = token
          turnAlternator = 11
        elif placer == 22 and Row_2[1] == "-":
          Row_2[1] = token
          turnAlternator = 11
        elif placer == 23 and Row_2[2] == "-":
          Row_2[2] = token
          turnAlternator = 11
        else:
          print("Invalid Space, Try Another")
      elif placer > 30 and placer < 40:
        if placer == 31 and Row_3[0] == "-":
          Row_3[0] = token
          turnAlternator = 11
        elif placer == 32 and Row_3[1] == "-":
          Row_3[1] = token
          turnAlternator = 11
        elif placer == 33 and Row_3[2] == "-":
          Row_3[2] = token
          turnAlternator = 11
        else:
          print("Invalid Space, Try Another")
def checkPlayerOneWin():
  token = "X"
  if Row_1[0] == token and Row_1[1] == token and Row_1[2] == token:
    print("Player 1 Wins")
    return True
  elif Row_2[0] == token and Row_2[1] == token and Row_2[2] == token:
    print("Player 1 Wins")
    return True
  elif Row_3[0] == token and Row_3[1] == token and Row_3[2] == token:
    print("Player 1 Wins")
    return True
  elif Row_1[0] == token and Row_2[0] == token and Row_3[0] == token:
    print("Player 1 Wins")
    return True
  elif Row_1[1] == token and Row_2[1] == token and Row_3[1] == token:
    print("Player 1 Wins")
    return True
  elif Row_1[2] == token and Row_2[2] == token and Row_3[2] == token:
    print("Player 1 Wins")
    return True
  elif Row_1[0] == token and Row_2[1] == token and Row_3[2] == token:
    print("Player 1 Wins")
    return True
  elif Row_1[2] == token and Row_2[1] == token and Row_3[0] == token:
    print("Player 1 Wins")
    return True

def checkPlayerTwoWin():
  token = "O"
  if Row_1[0] == token and Row_1[1] == token and Row_1[2] == token: #check horizontals
    print("Player 2 Wins")
    return True
  elif Row_2[0] == token and Row_2[1] == token and Row_2[2] == token:
    print("Player 2 Wins")
    return True
  elif Row_3[0] == token and Row_3[1] == token and Row_3[2] == token:
    print("Player 2 Wins")
    return True
  elif Row_1[0] == token and Row_2[0] == token and Row_3[0] == token: #check vertical
    print("Player 2 Wins")
    return True
  elif Row_1[1] == token and Row_2[1] == token and Row_3[1] == token:
    print("Player 2 Wins")
    return True
  elif Row_1[2] == token and Row_2[2] == token and Row_3[2] == token:
    print("Player 2 Wins")
    return True
  elif Row_1[0] == token and Row_2[1] == token and Row_3[2] == token: #check diagonals
    print("Player 2 Wins")
    return True
  elif Row_1[2] == token and Row_2[1] == token and Row_3[0] == token:
    print("Player 2 Wins")
    return True

def playerTwoTurn():
    token = "O"
    turnAlternator = 2
    while turnAlternator != 0:
      placer = int(input())
      if placer > 10 and placer < 19:
        if placer == 11 and Row_1[0] == "-":
          Row_1[0] = token
          turnAlternator = 0
        elif placer == 12 and Row_1[1] == "-":
          Row_1[1] = token
          turnAlternator = 0
        elif placer == 13 and Row_1[2] == "-":
          Row_1[2] = token
          turnAlternator = 0
        else:
          print("Invalid Space, Try Another")
      elif placer > 20 and placer < 29:
        if placer == 21 and Row_2[0] == "-":
          Row_2[0] = token
          turnAlternator = 0 
        elif placer == 22 and Row_2[1] == "-":
          Row_2[1] = token
          turnAlternator = 0
        elif placer == 23 and Row_2[2] == "-":
          Row_2[2] = token
          turnAlternator = 0
        else:
          print("Invalid Space, Try Another")
      elif placer > 30 and placer < 40:
        if placer == 31 and Row_3[0] == "-":
          Row_3[0] = token
          turnAlternator = 0
        elif placer == 32 and Row_3[1] == "-":
          Row_3[1] = token
          turnAlternator = 0
        elif placer == 33 and Row_3[2] == "-":
          Row_3[2] = token
          turnAlternator = 0
        else:
          print("Invalid Space, Try Another")

print("Welcome to tic-tac-toe")
print("When playing in order to set a move you must set the row and then column")
print("Example for the first space at the top I would input 11 in order to claim that space")
print("Enter START when you're ready to play")
start = input()
if start == "START":
  turnAlternator = 0
  while turnCounter != 9 or gameEnd != 1:
    if turnAlternator == 0:
      print_board()
      print("Player 1's turn")
      playerOneTurn()
      turnCounter = turnCounter + 1
      if checkPlayerOneWin() == True:
        break
        quit()
      else:
        turnAlternator = 0
      turnAlternator = 2
    elif turnAlternator != 0:
      print_board()
      print("Player 2's turn")
      playerTwoTurn()
      turnCounter = turnCounter + 1
      if checkPlayerTwoWin() == True:
        break
      else:
        turnAlternator = 0
else:
  print("HAHA every funny")



